---
# We need sudo for some of the Docker commands.
sudo: required

env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    service_name: sshd.service
  - distro: centos6
    init: /sbin/init
    run_opts: ""
    service_name: sshd.service

# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

before_install:
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Other tests if necessary
  # Check if sshd is started
  # - ssh=$(mktemp)
  # - docker exec "$(cat ${container_id})" env TERM=xterm ps -eaf | tee -a ${ssh}
  # - >
  #   tail ${ssh}
  #   | grep -q "/usr/sbin/sshd"
  #   && (echo 'SSH is started - success' && exit 0)
  #   || (echo 'SSH is not started - failure' && exit 1)

  # Test assertions.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test-assertions.yml'

  # Check if configuration has been put into place
  # - ssh_config=$(mktemp)
  # - docker exec "$(cat ${container_id})" env TERM=xterm cat /etc/ssh/sshd_config | tee -a ${ssh_config}
  # - >
  #   tail ${ssh_config}
  #   | grep -q "PermitRootLogin.*without-password"
  #   && (echo 'Configuration - success' && exit 0)
  #   || (echo 'Configuraiton - not successful' && exit 1)

after_failure:
  # Check what happened on systemd systems.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm systemctl -l status ${service_name}'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm journalctl -xe --no-pager'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
